// Zed settings
//
// For information on how to configure Zed, see the Zed
// documentation: https://zed.dev/docs/configuring-zed
//
// To see all of Zed's default settings without changing your
// custom settings, run the `open default settings` command
// from the command palette or from `Zed` application menu.
{
  "context_servers": {
    "context7": {
      "command": {
        "path": "npx",
        "args": ["-y", "@upstash/context7-mcp@latest"],
        "env": null
      },
      "settings": {}
    },
    "langgraph-docs-mcp": {
      "command": {
        "path": "uvx",
        "args": [
          "--from",
          "mcpdoc",
          "mcpdoc",
          "--urls",
          "LangGraph:https://langchain-ai.github.io/langgraph/llms.txt",
          "LangChain:https://python.langchain.com/llms.txt",
          "--transport",
          "stdio"
        ],
        "env": null
      },
      "settings": {}
    }
  },
  "ssh_connections": [
    {
      "host": "richard.tail53973.ts.net",
      "username": "0xdev",
      "projects": []
    },
    {
      "host": "0xdevtekimini.tail53973.ts.net",
      "username": "0xdev",
      "projects": [
        {
          "paths": ["~/dotfiles"]
        }
      ]
    }
  ],
  "use_system_prompts": false,
  "icon_theme": "Zed (Default)",
  "autosave": "on_focus_change",
  "use_autoclose": true,
  "always_treat_brackets_as_autoclosed": true,
  "restore_on_startup": "last_workspace",
  "hide_mouse": "on_typing_and_movement",
  "centered_layout": {
    "left_padding": 0.2,
    "right_padding": 0.2
  },
  "journal": {
    "hour_format": "hour24",
    "path": "~/Notes/zed-notes"
  },
  "collaboration_panel": {
    "button": true,
    "dock": "left"
  },
  "edit_predictions": {
    "disabled_globs": [
      "**/.env*",
      "**/*.pem",
      "**/*.key",
      "**/*.cert",
      "**/*.crt",
      "**/secrets.yml"
    ],
    "mode": "eager"
  },
  "features": {
    "copilot": true,
    "edit_prediction_provider": "copilot" // "zed", "copilot", "supermaven"
  },
  "agent": {
    "stream_edits": true,
    "always_allow_tool_actions": true,
    "profiles": {
      "ask": {
        "name": "Ask",
        "tools": {
          "diagnostics": true,
          "fetch": true,
          "list_directory": false,
          "now": true,
          "find_path": true,
          "read_file": true,
          "grep": true,
          "thinking": true
        },
        "enable_all_context_servers": false,
        "context_servers": {
          "mcp-server-sequential-thinking": {
            "tools": {
              "sequentialthinking": true
            }
          },
          "langgraph-docs-mcp": {
            "tools": {
              "list_doc_sources": true,
              "fetch_docs": true
            }
          }
        }
      },
      "write": {
        "name": "Write",
        "tools": {
          "open": true,
          "terminal": true,
          "batch_tool": true,
          "code_actions": true,
          "code_symbols": true,
          "copy_path": true,
          "create_file": true,
          "delete_path": true,
          "diagnostics": true,
          "edit_file": true,
          "fetch": true,
          "list_directory": true,
          "move_path": true,
          "now": true,
          "find_path": true,
          "read_file": true,
          "grep": true,
          "rename": true,
          "symbol_info": true,
          "thinking": true,
          "create_directory": true
        },
        "enable_all_context_servers": true,
        "context_servers": {}
      },
      "chat": {
        "name": "Chat",
        "tools": {
          "contents": true,
          "grep": true,
          "find_path": true,
          "open": true,
          "list_directory": true,
          "diagnostics": true,
          "terminal": false,
          "symbol_info": true,
          "read_file": true,
          "thinking": true,
          "now": true,
          "fetch": true
        },
        "enable_all_context_servers": false,
        "context_servers": {
          "mcp-server-sequential-thinking": {
            "tools": {
              "sequentialthinking": true
            }
          },
          "langgraph-docs-mcp": {
            "tools": {
              "list_doc_sources": true,
              "fetch_docs": true
            }
          }
        }
      }
    },
    "default_profile": "write",
    "default_model": {
      "provider": "copilot_chat",
      "model": "gpt-4.1"
    },
    "version": "2",
    "enable_experimental_live_diffs": true
  },
  "language_models": {
    "openai": {
      "version": "1",
      "api_url": "https://openrouter.ai/api/v1",
      "available_models": [
        {
          "name": "anthropic/claude-3.7-sonnet",
          "display_name": "Claude 3.7 Sonnet",
          "max_tokens": 200000,
          "max_output_tokens": 8192
        },
        {
          "name": "anthropic/claude-3.7-sonnet:thinking",
          "display_name": "Claude 3.7 Sonnet Thinking",
          "max_tokens": 128000
        },
        {
          "name": "deepseek/deepseek-r1",
          "max_tokens": 128000,
          "max_output_tokens": 8192,
          "display_name": "DeepSeek: R1"
        },
        {
          "name": "perplexity/r1-1776",
          "max_tokens": 128000,
          "max_output_tokens": 8192,
          "display_name": "Perplexity: R1-1776"
        }
      ]
    }
  },
  "base_keymap": "Emacs",
  "vim_mode": true,
  "vim": {
    "enable_vim_sneak": true
  },
  "relative_line_numbers": true,
  "scrollbar": {
    "show": "never"
  },
  "show_whitespaces": "selection",
  "show_completions_on_input": true,
  "show_signature_help_after_edits": true,
  "tab_bar": {
    "show": true,
    "show_nav_history_buttons": false,
    "show_tab_bar_buttons": true
  },
  "tabs": {
    "close_position": "right",
    "file_icons": true,
    "git_status": true,
    "activate_on_close": "history",
    "show_close_button": "hover"
  },
  // Turn off telemetry
  "telemetry": {
    "diagnostics": false,
    "metrics": false
  },
  // Use zed commit editor
  "terminal": {
    "font_family": "Maple Mono NF CN",
    "font_fallbacks": ["Symbols Nerd Font"],
    "copy_on_select": true,
    "font_size": 14,
    "env": {
      "EDITOR": "zed --wait",
      "VISUAL": "zed --wait"
    },
    "shell": {
      "with_arguments": {
        // "program": "tat",
        "program": "fish",
        "args": []
      }
    }
  },
  "theme": {
    "dark": "One Dark",
    "light": "One Dark",
    "mode": "system"
  },
  "toolbar": {
    "breadcrumbs": true,
    "quick_actions": true
  },
  "ui_font_size": 16,
  "ui_font_family": "Maple Mono NF CN",
  "ui_font_fallbacks": ["Symbols Nerd Font Mono"],
  "buffer_font_size": 14,
  // "buffer_line_height": {
  //   "custom": 1.2
  // },
  "buffer_font_family": "Maple Mono NF CN",
  "buffer_font_fallbacks": ["Symbols Nerd Font Mono"],
  "buffer_line_height": "comfortable",
  "buffer_font_features": {
    "calt": true, //Enable ligatures -> => !=
    "zero": true, // Alternative zero -> 0
    "cv01": true // Remove gaps @$%
  },
  "experimental.theme_overrides": {
    "syntax": {
      "comment": {
        "font_style": "italic"
      },
      "keyword": {
        "font_style": "italic"
      }
    }
  },
  "current_line_highlight": "line",
  // Indentation, rainbow indentation
  "indent_guides": {
    "enabled": true,
    "coloring": "indent_aware"
  },
  // Inlay hints preconfigured by Zed: Go, Rust, Typescript and Svelte
  "inlay_hints": {
    "enabled": false
  },
  "format_on_save": "on",
  "formatter": "auto",
  "languages": {
    "Python": {
      "language_servers": ["pyright", "ruff"],
      "format_on_save": "on",
      "formatter": [
        {
          "code_actions": {
            "source.organizeImports.ruff": true,
            "source.fixAll.ruff": true
          }
        },
        {
          "language_server": {
            "name": "ruff"
          }
        }
      ]
    },
    "Ruby": {
      "language_servers": ["ruby-lsp", "!solargraph", "!rubocop"],
      "formatter": "language_server",
      "format_on_save": "on"
    }
  },
  "lsp": {
    "rust-analyzer": {
      "initialization_options": {
        "check": {
          "command": "clippy" // rust-analyzer.check.command (default: "check")
        }
      }
    },
    "ruby-lsp": {
      "initialization_options": {
        "enabledFeatures": {
          "diagnostics": false,
          "formatting": true
        },
        "formatter": "rubyfmt",
        "linters": ["standard"]
      },
      "settings": {
        "use_bundler": false
      }
    }
  }
}
